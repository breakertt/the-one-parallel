#
# Default settings for the simulation
#
## Scenario settings
Scenario.name = [\
    rental_tracking_example_buffersize_20M;\
    rental_tracking_example_buffersize_200M;\
    rental_tracking_example_buffersize_1000M;\
    rental_tracking_example_buffersize_2047M;\
]

Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 36000

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# WiFi
wifiInterface.type = SimpleBroadcastInterface
wifiInterface.transmitSpeed = 7.5M
wifiInterface.transmitRange = 100
# HQ, Rental Cars, Other Cars
Scenario.nrofHostGroups = 3
# Settings applied to all groups
Group.router = EpidemicRouter
Group.bufferSize = [20M; 200M; 1000M; 2047M]
Group.nrofInterfaces = 1
Group.interface1 = wifiInterface
Group.msgTtl = 240

# hq
Group1.groupID = hq
Group1.nrofHosts = 1
Group1.movementModel = StationaryMovement
Group1.nodeLocation = 2000, 2000

# rental cars
Group2.groupID = r
Group2.nrofHosts = 10
Group2.movementModel = ShortestPathMapBasedMovement
Group2.okMaps = 1
Group2.speed = 2.7, 13.9

# other cars
Group3.groupID = c
Group3.nrofHosts = 39
Group3.movementModel = ShortestPathMapBasedMovement
Group3.okMaps = 1
Group3.speed = 2.7, 13.9

Events.nrof = 1
Events1.class = MessageEventGenerator
Events1.interval = 60,120
Events1.size = 10k,100k
Events1.hosts = 1,11
Events1.toHosts = 0
Events1.prefix = M


Report.nrofReports = 1
Report.reportDir = reports/my_settings_batch/
Report.report1 = MessageStatsReport

MovementModel.worldSize = 4500, 3400
MovementModel.rngSeed = 1
MapBasedMovement.nrofMapFiles = 3
MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt

Optimization.cellSizeMult = 500
Optimization.randomizeUpdateOrder = true

## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
